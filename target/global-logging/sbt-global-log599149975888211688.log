[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Administrator\AppData\Local\Temp\idea1.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Administrator\AppData\Local\Temp\idea1.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 17.0.2)
[debug] Load.defaultLoad until apply took 71.2605ms
[debug]           Load.loadUnit: plugins took 48.215ms
[debug]           Load.loadUnit: defsScala took 0.3322ms
[debug] [Loading] Scanning directory C:\D\Univ\sd\332project\project
[debug]             Load.loadUnit: mkEval took 4.555ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\D\Univ\sd\332project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.4136 ms
[info] loading settings for project root-332project-build from idea1.sbt ...
[debug]               Load.resolveProject(root-332project-build) took 40.1565ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root-332project-build, base: C:\D\Univ\sd\332project\project, plugins: List(<none>))) took 60.4045ms
[debug] [Loading] Done in C:\D\Univ\sd\332project\project, returning: (root-332project-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1539.7995ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.6282ms
[debug]         Load.loadUnit(file:/C:/D/Univ/sd/332project/project/, ...) took 1600.8589ms
[debug]       Load.apply: load took 1712.9642ms
[debug]       Load.apply: resolveProjects took 4.0214ms
[debug]       Load.apply: finalTransforms took 34.1505ms
[debug]       Load.apply: config.delegates took 4.4584ms
[debug]       Load.apply: Def.make(settings)... took 198.2505ms
[debug]       Load.apply: structureIndex took 49.3344ms
[debug]       Load.apply: mkStreams took 1.0705ms
[info] loading project definition from C:\D\Univ\sd\332project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2975.0249ms
[debug]     Load.loadUnit: defsScala took 0.0026ms
[debug] [Loading] Scanning directory C:\D\Univ\sd\332project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\D\Univ\sd\332project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2554 ms
[debug]         Load.resolveProject(root-332project) took 16.8344ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root-332project, base: C:\D\Univ\sd\332project, plugins: List(<none>))) took 18.591ms
[debug] [Loading] Done in C:\D\Univ\sd\332project, returning: (root-332project)
[debug]     Load.loadUnit: loadedProjectsRaw took 19.5356ms
[debug]     Load.loadUnit: cleanEvalClasses took 0.0172ms
[debug]   Load.loadUnit(file:/C:/D/Univ/sd/332project/, ...) took 2995.4802ms
[debug] Load.apply: load took 3007.7439ms
[debug] Load.apply: resolveProjects took 0.1812ms
[debug] Load.apply: finalTransforms took 18.6437ms
[debug] Load.apply: config.delegates took 0.319ms
[debug] Load.apply: Def.make(settings)... took 52.4499ms
[debug] Load.apply: structureIndex took 19.9902ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to root-332project (in build file:/C:/D/Univ/sd/332project/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
